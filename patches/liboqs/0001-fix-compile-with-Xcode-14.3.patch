From 781e372c36de2cfae262a77e512a4ac61b057f3a Mon Sep 17 00:00:00 2001
From: Ben Sartor <ben@simlar.org>
Date: Wed, 19 Apr 2023 01:54:49 +0200
Subject: [PATCH] fix compile with Xcode 14.3

---
 src/kem/bike/kem_bike.c                       |  4 ++--
 .../kem_classic_mceliece_348864.c             |  2 +-
 .../kem_classic_mceliece_348864f.c            |  2 +-
 .../kem_classic_mceliece_460896.c             |  2 +-
 .../kem_classic_mceliece_460896f.c            |  2 +-
 .../kem_classic_mceliece_6688128.c            |  2 +-
 .../kem_classic_mceliece_6688128f.c           |  2 +-
 .../kem_classic_mceliece_6960119.c            |  2 +-
 .../kem_classic_mceliece_6960119f.c           |  2 +-
 .../kem_classic_mceliece_8192128.c            |  2 +-
 .../kem_classic_mceliece_8192128f.c           |  2 +-
 src/kem/frodokem/kem_frodokem1344aes.c        |  2 +-
 src/kem/frodokem/kem_frodokem1344shake.c      |  2 +-
 src/kem/frodokem/kem_frodokem640aes.c         |  2 +-
 src/kem/frodokem/kem_frodokem640shake.c       |  2 +-
 src/kem/frodokem/kem_frodokem976aes.c         |  2 +-
 src/kem/frodokem/kem_frodokem976shake.c       |  2 +-
 src/kem/hqc/kem_hqc_128.c                     |  2 +-
 src/kem/hqc/kem_hqc_192.c                     |  2 +-
 src/kem/hqc/kem_hqc_256.c                     |  2 +-
 src/kem/kem.c                                 |  2 +-
 src/kem/kyber/kem_kyber_1024.c                |  2 +-
 src/kem/kyber/kem_kyber_1024_90s.c            |  2 +-
 src/kem/kyber/kem_kyber_512.c                 |  2 +-
 src/kem/kyber/kem_kyber_512_90s.c             |  2 +-
 src/kem/kyber/kem_kyber_768.c                 |  2 +-
 src/kem/kyber/kem_kyber_768_90s.c             |  2 +-
 .../pqcrystals-kyber_kyber1024-90s_ref/ntt.c  |  2 +-
 .../pqcrystals-kyber_kyber1024_ref/ntt.c      |  2 +-
 .../pqcrystals-kyber_kyber512-90s_ref/ntt.c   |  2 +-
 .../kyber/pqcrystals-kyber_kyber512_ref/ntt.c |  2 +-
 .../pqcrystals-kyber_kyber768-90s_ref/ntt.c   |  2 +-
 .../kyber/pqcrystals-kyber_kyber768_ref/ntt.c |  2 +-
 src/kem/ntru/kem_ntru_hps2048509.c            |  2 +-
 src/kem/ntru/kem_ntru_hps2048677.c            |  2 +-
 src/kem/ntru/kem_ntru_hps40961229.c           |  2 +-
 src/kem/ntru/kem_ntru_hps4096821.c            |  2 +-
 src/kem/ntru/kem_ntru_hrss1373.c              |  2 +-
 src/kem/ntru/kem_ntru_hrss701.c               |  2 +-
 src/kem/ntruprime/kem_ntruprime_ntrulpr1277.c |  2 +-
 src/kem/ntruprime/kem_ntruprime_ntrulpr653.c  |  2 +-
 src/kem/ntruprime/kem_ntruprime_ntrulpr761.c  |  2 +-
 src/kem/ntruprime/kem_ntruprime_ntrulpr857.c  |  2 +-
 src/kem/ntruprime/kem_ntruprime_sntrup1277.c  |  2 +-
 src/kem/ntruprime/kem_ntruprime_sntrup653.c   |  2 +-
 src/kem/ntruprime/kem_ntruprime_sntrup761.c   |  2 +-
 src/kem/ntruprime/kem_ntruprime_sntrup857.c   |  2 +-
 src/kem/saber/kem_saber_firesaber.c           |  2 +-
 src/kem/saber/kem_saber_lightsaber.c          |  2 +-
 src/kem/saber/kem_saber_saber.c               |  2 +-
 src/sig/dilithium/sig_dilithium_2.c           |  2 +-
 src/sig/dilithium/sig_dilithium_2_aes.c       |  2 +-
 src/sig/dilithium/sig_dilithium_3.c           |  2 +-
 src/sig/dilithium/sig_dilithium_3_aes.c       |  2 +-
 src/sig/dilithium/sig_dilithium_5.c           |  2 +-
 src/sig/dilithium/sig_dilithium_5_aes.c       |  2 +-
 src/sig/falcon/sig_falcon_1024.c              |  2 +-
 src/sig/falcon/sig_falcon_512.c               |  2 +-
 src/sig/picnic/sig_picnic.c                   | 24 +++++++++----------
 .../rainbow/sig_rainbow_III_circumzenithal.c  |  2 +-
 src/sig/rainbow/sig_rainbow_III_classic.c     |  2 +-
 src/sig/rainbow/sig_rainbow_III_compressed.c  |  2 +-
 .../rainbow/sig_rainbow_V_circumzenithal.c    |  2 +-
 src/sig/rainbow/sig_rainbow_V_classic.c       |  2 +-
 src/sig/rainbow/sig_rainbow_V_compressed.c    |  2 +-
 src/sig/sig.c                                 |  2 +-
 .../sphincs/sig_sphincs_haraka_128f_robust.c  |  2 +-
 .../sphincs/sig_sphincs_haraka_128f_simple.c  |  2 +-
 .../sphincs/sig_sphincs_haraka_128s_robust.c  |  2 +-
 .../sphincs/sig_sphincs_haraka_128s_simple.c  |  2 +-
 .../sphincs/sig_sphincs_haraka_192f_robust.c  |  2 +-
 .../sphincs/sig_sphincs_haraka_192f_simple.c  |  2 +-
 .../sphincs/sig_sphincs_haraka_192s_robust.c  |  2 +-
 .../sphincs/sig_sphincs_haraka_192s_simple.c  |  2 +-
 .../sphincs/sig_sphincs_haraka_256f_robust.c  |  2 +-
 .../sphincs/sig_sphincs_haraka_256f_simple.c  |  2 +-
 .../sphincs/sig_sphincs_haraka_256s_robust.c  |  2 +-
 .../sphincs/sig_sphincs_haraka_256s_simple.c  |  2 +-
 .../sphincs/sig_sphincs_sha256_128f_robust.c  |  2 +-
 .../sphincs/sig_sphincs_sha256_128f_simple.c  |  2 +-
 .../sphincs/sig_sphincs_sha256_128s_robust.c  |  2 +-
 .../sphincs/sig_sphincs_sha256_128s_simple.c  |  2 +-
 .../sphincs/sig_sphincs_sha256_192f_robust.c  |  2 +-
 .../sphincs/sig_sphincs_sha256_192f_simple.c  |  2 +-
 .../sphincs/sig_sphincs_sha256_192s_robust.c  |  2 +-
 .../sphincs/sig_sphincs_sha256_192s_simple.c  |  2 +-
 .../sphincs/sig_sphincs_sha256_256f_robust.c  |  2 +-
 .../sphincs/sig_sphincs_sha256_256f_simple.c  |  2 +-
 .../sphincs/sig_sphincs_sha256_256s_robust.c  |  2 +-
 .../sphincs/sig_sphincs_sha256_256s_simple.c  |  2 +-
 .../sig_sphincs_shake256_128f_robust.c        |  2 +-
 .../sig_sphincs_shake256_128f_simple.c        |  2 +-
 .../sig_sphincs_shake256_128s_robust.c        |  2 +-
 .../sig_sphincs_shake256_128s_simple.c        |  2 +-
 .../sig_sphincs_shake256_192f_robust.c        |  2 +-
 .../sig_sphincs_shake256_192f_simple.c        |  2 +-
 .../sig_sphincs_shake256_192s_robust.c        |  2 +-
 .../sig_sphincs_shake256_192s_simple.c        |  2 +-
 .../sig_sphincs_shake256_256f_robust.c        |  2 +-
 .../sig_sphincs_shake256_256f_simple.c        |  2 +-
 .../sig_sphincs_shake256_256s_robust.c        |  2 +-
 .../sig_sphincs_shake256_256s_simple.c        |  2 +-
 102 files changed, 114 insertions(+), 114 deletions(-)

diff --git a/src/kem/bike/kem_bike.c b/src/kem/bike/kem_bike.c
index df8043c3..5d745670 100644
--- a/src/kem/bike/kem_bike.c
+++ b/src/kem/bike/kem_bike.c
@@ -5,7 +5,7 @@
 #include <oqs/kem_bike.h>
 
 #ifdef OQS_ENABLE_KEM_bike_l1
-OQS_KEM *OQS_KEM_bike_l1_new() {
+OQS_KEM *OQS_KEM_bike_l1_new(void) {
 	OQS_KEM *kem = malloc(sizeof(OQS_KEM));
 	if (kem == NULL) {
 		return NULL;
@@ -30,7 +30,7 @@ OQS_KEM *OQS_KEM_bike_l1_new() {
 #endif
 
 #ifdef OQS_ENABLE_KEM_bike_l3
-OQS_KEM *OQS_KEM_bike_l3_new() {
+OQS_KEM *OQS_KEM_bike_l3_new(void) {
 	OQS_KEM *kem = malloc(sizeof(OQS_KEM));
 	if (kem == NULL) {
 		return NULL;
diff --git a/src/kem/classic_mceliece/kem_classic_mceliece_348864.c b/src/kem/classic_mceliece/kem_classic_mceliece_348864.c
index b7ab891a..a05f71c1 100644
--- a/src/kem/classic_mceliece/kem_classic_mceliece_348864.c
+++ b/src/kem/classic_mceliece/kem_classic_mceliece_348864.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_KEM_classic_mceliece_348864)
 
-OQS_KEM *OQS_KEM_classic_mceliece_348864_new() {
+OQS_KEM *OQS_KEM_classic_mceliece_348864_new(void) {
 
 	OQS_KEM *kem = malloc(sizeof(OQS_KEM));
 	if (kem == NULL) {
diff --git a/src/kem/classic_mceliece/kem_classic_mceliece_348864f.c b/src/kem/classic_mceliece/kem_classic_mceliece_348864f.c
index 8b740e99..06f19003 100644
--- a/src/kem/classic_mceliece/kem_classic_mceliece_348864f.c
+++ b/src/kem/classic_mceliece/kem_classic_mceliece_348864f.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_KEM_classic_mceliece_348864f)
 
-OQS_KEM *OQS_KEM_classic_mceliece_348864f_new() {
+OQS_KEM *OQS_KEM_classic_mceliece_348864f_new(void) {
 
 	OQS_KEM *kem = malloc(sizeof(OQS_KEM));
 	if (kem == NULL) {
diff --git a/src/kem/classic_mceliece/kem_classic_mceliece_460896.c b/src/kem/classic_mceliece/kem_classic_mceliece_460896.c
index 985552d2..31fd7d8d 100644
--- a/src/kem/classic_mceliece/kem_classic_mceliece_460896.c
+++ b/src/kem/classic_mceliece/kem_classic_mceliece_460896.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_KEM_classic_mceliece_460896)
 
-OQS_KEM *OQS_KEM_classic_mceliece_460896_new() {
+OQS_KEM *OQS_KEM_classic_mceliece_460896_new(void) {
 
 	OQS_KEM *kem = malloc(sizeof(OQS_KEM));
 	if (kem == NULL) {
diff --git a/src/kem/classic_mceliece/kem_classic_mceliece_460896f.c b/src/kem/classic_mceliece/kem_classic_mceliece_460896f.c
index ce2fcbc5..57719556 100644
--- a/src/kem/classic_mceliece/kem_classic_mceliece_460896f.c
+++ b/src/kem/classic_mceliece/kem_classic_mceliece_460896f.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_KEM_classic_mceliece_460896f)
 
-OQS_KEM *OQS_KEM_classic_mceliece_460896f_new() {
+OQS_KEM *OQS_KEM_classic_mceliece_460896f_new(void) {
 
 	OQS_KEM *kem = malloc(sizeof(OQS_KEM));
 	if (kem == NULL) {
diff --git a/src/kem/classic_mceliece/kem_classic_mceliece_6688128.c b/src/kem/classic_mceliece/kem_classic_mceliece_6688128.c
index 75efaf5d..91646541 100644
--- a/src/kem/classic_mceliece/kem_classic_mceliece_6688128.c
+++ b/src/kem/classic_mceliece/kem_classic_mceliece_6688128.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_KEM_classic_mceliece_6688128)
 
-OQS_KEM *OQS_KEM_classic_mceliece_6688128_new() {
+OQS_KEM *OQS_KEM_classic_mceliece_6688128_new(void) {
 
 	OQS_KEM *kem = malloc(sizeof(OQS_KEM));
 	if (kem == NULL) {
diff --git a/src/kem/classic_mceliece/kem_classic_mceliece_6688128f.c b/src/kem/classic_mceliece/kem_classic_mceliece_6688128f.c
index c86b100c..b4bcda33 100644
--- a/src/kem/classic_mceliece/kem_classic_mceliece_6688128f.c
+++ b/src/kem/classic_mceliece/kem_classic_mceliece_6688128f.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_KEM_classic_mceliece_6688128f)
 
-OQS_KEM *OQS_KEM_classic_mceliece_6688128f_new() {
+OQS_KEM *OQS_KEM_classic_mceliece_6688128f_new(void) {
 
 	OQS_KEM *kem = malloc(sizeof(OQS_KEM));
 	if (kem == NULL) {
diff --git a/src/kem/classic_mceliece/kem_classic_mceliece_6960119.c b/src/kem/classic_mceliece/kem_classic_mceliece_6960119.c
index cb707ec9..74f9be54 100644
--- a/src/kem/classic_mceliece/kem_classic_mceliece_6960119.c
+++ b/src/kem/classic_mceliece/kem_classic_mceliece_6960119.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_KEM_classic_mceliece_6960119)
 
-OQS_KEM *OQS_KEM_classic_mceliece_6960119_new() {
+OQS_KEM *OQS_KEM_classic_mceliece_6960119_new(void) {
 
 	OQS_KEM *kem = malloc(sizeof(OQS_KEM));
 	if (kem == NULL) {
diff --git a/src/kem/classic_mceliece/kem_classic_mceliece_6960119f.c b/src/kem/classic_mceliece/kem_classic_mceliece_6960119f.c
index 8f054830..23538185 100644
--- a/src/kem/classic_mceliece/kem_classic_mceliece_6960119f.c
+++ b/src/kem/classic_mceliece/kem_classic_mceliece_6960119f.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_KEM_classic_mceliece_6960119f)
 
-OQS_KEM *OQS_KEM_classic_mceliece_6960119f_new() {
+OQS_KEM *OQS_KEM_classic_mceliece_6960119f_new(void) {
 
 	OQS_KEM *kem = malloc(sizeof(OQS_KEM));
 	if (kem == NULL) {
diff --git a/src/kem/classic_mceliece/kem_classic_mceliece_8192128.c b/src/kem/classic_mceliece/kem_classic_mceliece_8192128.c
index 36826bb1..b4d04ccf 100644
--- a/src/kem/classic_mceliece/kem_classic_mceliece_8192128.c
+++ b/src/kem/classic_mceliece/kem_classic_mceliece_8192128.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_KEM_classic_mceliece_8192128)
 
-OQS_KEM *OQS_KEM_classic_mceliece_8192128_new() {
+OQS_KEM *OQS_KEM_classic_mceliece_8192128_new(void) {
 
 	OQS_KEM *kem = malloc(sizeof(OQS_KEM));
 	if (kem == NULL) {
diff --git a/src/kem/classic_mceliece/kem_classic_mceliece_8192128f.c b/src/kem/classic_mceliece/kem_classic_mceliece_8192128f.c
index cbe95fc2..c3c674b6 100644
--- a/src/kem/classic_mceliece/kem_classic_mceliece_8192128f.c
+++ b/src/kem/classic_mceliece/kem_classic_mceliece_8192128f.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_KEM_classic_mceliece_8192128f)
 
-OQS_KEM *OQS_KEM_classic_mceliece_8192128f_new() {
+OQS_KEM *OQS_KEM_classic_mceliece_8192128f_new(void) {
 
 	OQS_KEM *kem = malloc(sizeof(OQS_KEM));
 	if (kem == NULL) {
diff --git a/src/kem/frodokem/kem_frodokem1344aes.c b/src/kem/frodokem/kem_frodokem1344aes.c
index 6cd4f6c3..60706154 100644
--- a/src/kem/frodokem/kem_frodokem1344aes.c
+++ b/src/kem/frodokem/kem_frodokem1344aes.c
@@ -6,7 +6,7 @@
 
 #ifdef OQS_ENABLE_KEM_frodokem_1344_aes
 
-OQS_KEM *OQS_KEM_frodokem_1344_aes_new() {
+OQS_KEM *OQS_KEM_frodokem_1344_aes_new(void) {
 
 	OQS_KEM *kem = malloc(sizeof(OQS_KEM));
 	if (kem == NULL) {
diff --git a/src/kem/frodokem/kem_frodokem1344shake.c b/src/kem/frodokem/kem_frodokem1344shake.c
index 0dc6e381..c4a20c72 100644
--- a/src/kem/frodokem/kem_frodokem1344shake.c
+++ b/src/kem/frodokem/kem_frodokem1344shake.c
@@ -6,7 +6,7 @@
 
 #ifdef OQS_ENABLE_KEM_frodokem_1344_shake
 
-OQS_KEM *OQS_KEM_frodokem_1344_shake_new() {
+OQS_KEM *OQS_KEM_frodokem_1344_shake_new(void) {
 
 	OQS_KEM *kem = malloc(sizeof(OQS_KEM));
 	if (kem == NULL) {
diff --git a/src/kem/frodokem/kem_frodokem640aes.c b/src/kem/frodokem/kem_frodokem640aes.c
index ed7a0b1a..2d9b38bf 100644
--- a/src/kem/frodokem/kem_frodokem640aes.c
+++ b/src/kem/frodokem/kem_frodokem640aes.c
@@ -6,7 +6,7 @@
 
 #ifdef OQS_ENABLE_KEM_frodokem_640_aes
 
-OQS_KEM *OQS_KEM_frodokem_640_aes_new() {
+OQS_KEM *OQS_KEM_frodokem_640_aes_new(void) {
 
 	OQS_KEM *kem = malloc(sizeof(OQS_KEM));
 	if (kem == NULL) {
diff --git a/src/kem/frodokem/kem_frodokem640shake.c b/src/kem/frodokem/kem_frodokem640shake.c
index 98a0befa..29db4de2 100644
--- a/src/kem/frodokem/kem_frodokem640shake.c
+++ b/src/kem/frodokem/kem_frodokem640shake.c
@@ -6,7 +6,7 @@
 
 #ifdef OQS_ENABLE_KEM_frodokem_640_shake
 
-OQS_KEM *OQS_KEM_frodokem_640_shake_new() {
+OQS_KEM *OQS_KEM_frodokem_640_shake_new(void) {
 
 	OQS_KEM *kem = malloc(sizeof(OQS_KEM));
 	if (kem == NULL) {
diff --git a/src/kem/frodokem/kem_frodokem976aes.c b/src/kem/frodokem/kem_frodokem976aes.c
index fc19aaf0..3d6b07a0 100644
--- a/src/kem/frodokem/kem_frodokem976aes.c
+++ b/src/kem/frodokem/kem_frodokem976aes.c
@@ -6,7 +6,7 @@
 
 #ifdef OQS_ENABLE_KEM_frodokem_976_aes
 
-OQS_KEM *OQS_KEM_frodokem_976_aes_new() {
+OQS_KEM *OQS_KEM_frodokem_976_aes_new(void) {
 
 	OQS_KEM *kem = malloc(sizeof(OQS_KEM));
 	if (kem == NULL) {
diff --git a/src/kem/frodokem/kem_frodokem976shake.c b/src/kem/frodokem/kem_frodokem976shake.c
index 6282542b..6cda9038 100644
--- a/src/kem/frodokem/kem_frodokem976shake.c
+++ b/src/kem/frodokem/kem_frodokem976shake.c
@@ -6,7 +6,7 @@
 
 #ifdef OQS_ENABLE_KEM_frodokem_976_shake
 
-OQS_KEM *OQS_KEM_frodokem_976_shake_new() {
+OQS_KEM *OQS_KEM_frodokem_976_shake_new(void) {
 
 	OQS_KEM *kem = malloc(sizeof(OQS_KEM));
 	if (kem == NULL) {
diff --git a/src/kem/hqc/kem_hqc_128.c b/src/kem/hqc/kem_hqc_128.c
index 1b8aede5..4bf98186 100644
--- a/src/kem/hqc/kem_hqc_128.c
+++ b/src/kem/hqc/kem_hqc_128.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_KEM_hqc_128)
 
-OQS_KEM *OQS_KEM_hqc_128_new() {
+OQS_KEM *OQS_KEM_hqc_128_new(void) {
 
 	OQS_KEM *kem = malloc(sizeof(OQS_KEM));
 	if (kem == NULL) {
diff --git a/src/kem/hqc/kem_hqc_192.c b/src/kem/hqc/kem_hqc_192.c
index 71915f85..1d8dd90c 100644
--- a/src/kem/hqc/kem_hqc_192.c
+++ b/src/kem/hqc/kem_hqc_192.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_KEM_hqc_192)
 
-OQS_KEM *OQS_KEM_hqc_192_new() {
+OQS_KEM *OQS_KEM_hqc_192_new(void) {
 
 	OQS_KEM *kem = malloc(sizeof(OQS_KEM));
 	if (kem == NULL) {
diff --git a/src/kem/hqc/kem_hqc_256.c b/src/kem/hqc/kem_hqc_256.c
index 5e1c733a..ccfe43ae 100644
--- a/src/kem/hqc/kem_hqc_256.c
+++ b/src/kem/hqc/kem_hqc_256.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_KEM_hqc_256)
 
-OQS_KEM *OQS_KEM_hqc_256_new() {
+OQS_KEM *OQS_KEM_hqc_256_new(void) {
 
 	OQS_KEM *kem = malloc(sizeof(OQS_KEM));
 	if (kem == NULL) {
diff --git a/src/kem/kem.c b/src/kem/kem.c
index b368d06f..d29fae67 100644
--- a/src/kem/kem.c
+++ b/src/kem/kem.c
@@ -68,7 +68,7 @@ OQS_API const char *OQS_KEM_alg_identifier(size_t i) {
 	}
 }
 
-OQS_API int OQS_KEM_alg_count() {
+OQS_API int OQS_KEM_alg_count(void) {
 	return OQS_KEM_algs_length;
 }
 
diff --git a/src/kem/kyber/kem_kyber_1024.c b/src/kem/kyber/kem_kyber_1024.c
index b24fa629..db72b23c 100644
--- a/src/kem/kyber/kem_kyber_1024.c
+++ b/src/kem/kyber/kem_kyber_1024.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_KEM_kyber_1024)
 
-OQS_KEM *OQS_KEM_kyber_1024_new() {
+OQS_KEM *OQS_KEM_kyber_1024_new(void) {
 
 	OQS_KEM *kem = malloc(sizeof(OQS_KEM));
 	if (kem == NULL) {
diff --git a/src/kem/kyber/kem_kyber_1024_90s.c b/src/kem/kyber/kem_kyber_1024_90s.c
index fd14fc51..08ad55b6 100644
--- a/src/kem/kyber/kem_kyber_1024_90s.c
+++ b/src/kem/kyber/kem_kyber_1024_90s.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_KEM_kyber_1024_90s)
 
-OQS_KEM *OQS_KEM_kyber_1024_90s_new() {
+OQS_KEM *OQS_KEM_kyber_1024_90s_new(void) {
 
 	OQS_KEM *kem = malloc(sizeof(OQS_KEM));
 	if (kem == NULL) {
diff --git a/src/kem/kyber/kem_kyber_512.c b/src/kem/kyber/kem_kyber_512.c
index 6c94a96f..a226787f 100644
--- a/src/kem/kyber/kem_kyber_512.c
+++ b/src/kem/kyber/kem_kyber_512.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_KEM_kyber_512)
 
-OQS_KEM *OQS_KEM_kyber_512_new() {
+OQS_KEM *OQS_KEM_kyber_512_new(void) {
 
 	OQS_KEM *kem = malloc(sizeof(OQS_KEM));
 	if (kem == NULL) {
diff --git a/src/kem/kyber/kem_kyber_512_90s.c b/src/kem/kyber/kem_kyber_512_90s.c
index 3d0577b0..756cb143 100644
--- a/src/kem/kyber/kem_kyber_512_90s.c
+++ b/src/kem/kyber/kem_kyber_512_90s.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_KEM_kyber_512_90s)
 
-OQS_KEM *OQS_KEM_kyber_512_90s_new() {
+OQS_KEM *OQS_KEM_kyber_512_90s_new(void) {
 
 	OQS_KEM *kem = malloc(sizeof(OQS_KEM));
 	if (kem == NULL) {
diff --git a/src/kem/kyber/kem_kyber_768.c b/src/kem/kyber/kem_kyber_768.c
index bcf4e396..bc21b003 100644
--- a/src/kem/kyber/kem_kyber_768.c
+++ b/src/kem/kyber/kem_kyber_768.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_KEM_kyber_768)
 
-OQS_KEM *OQS_KEM_kyber_768_new() {
+OQS_KEM *OQS_KEM_kyber_768_new(void) {
 
 	OQS_KEM *kem = malloc(sizeof(OQS_KEM));
 	if (kem == NULL) {
diff --git a/src/kem/kyber/kem_kyber_768_90s.c b/src/kem/kyber/kem_kyber_768_90s.c
index ee84bbbe..90027c63 100644
--- a/src/kem/kyber/kem_kyber_768_90s.c
+++ b/src/kem/kyber/kem_kyber_768_90s.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_KEM_kyber_768_90s)
 
-OQS_KEM *OQS_KEM_kyber_768_90s_new() {
+OQS_KEM *OQS_KEM_kyber_768_90s_new(void) {
 
 	OQS_KEM *kem = malloc(sizeof(OQS_KEM));
 	if (kem == NULL) {
diff --git a/src/kem/kyber/pqcrystals-kyber_kyber1024-90s_ref/ntt.c b/src/kem/kyber/pqcrystals-kyber_kyber1024-90s_ref/ntt.c
index 2f2eb10b..0a670e05 100644
--- a/src/kem/kyber/pqcrystals-kyber_kyber1024-90s_ref/ntt.c
+++ b/src/kem/kyber/pqcrystals-kyber_kyber1024-90s_ref/ntt.c
@@ -18,7 +18,7 @@ static const uint8_t tree[128] = {
   7, 71, 39, 103, 23, 87, 55, 119, 15, 79, 47, 111, 31, 95, 63, 127
 };
 
-void init_ntt() {
+void init_ntt(void) {
   unsigned int i;
   int16_t tmp[128];
 
diff --git a/src/kem/kyber/pqcrystals-kyber_kyber1024_ref/ntt.c b/src/kem/kyber/pqcrystals-kyber_kyber1024_ref/ntt.c
index 2f2eb10b..0a670e05 100644
--- a/src/kem/kyber/pqcrystals-kyber_kyber1024_ref/ntt.c
+++ b/src/kem/kyber/pqcrystals-kyber_kyber1024_ref/ntt.c
@@ -18,7 +18,7 @@ static const uint8_t tree[128] = {
   7, 71, 39, 103, 23, 87, 55, 119, 15, 79, 47, 111, 31, 95, 63, 127
 };
 
-void init_ntt() {
+void init_ntt(void) {
   unsigned int i;
   int16_t tmp[128];
 
diff --git a/src/kem/kyber/pqcrystals-kyber_kyber512-90s_ref/ntt.c b/src/kem/kyber/pqcrystals-kyber_kyber512-90s_ref/ntt.c
index 2f2eb10b..0a670e05 100644
--- a/src/kem/kyber/pqcrystals-kyber_kyber512-90s_ref/ntt.c
+++ b/src/kem/kyber/pqcrystals-kyber_kyber512-90s_ref/ntt.c
@@ -18,7 +18,7 @@ static const uint8_t tree[128] = {
   7, 71, 39, 103, 23, 87, 55, 119, 15, 79, 47, 111, 31, 95, 63, 127
 };
 
-void init_ntt() {
+void init_ntt(void) {
   unsigned int i;
   int16_t tmp[128];
 
diff --git a/src/kem/kyber/pqcrystals-kyber_kyber512_ref/ntt.c b/src/kem/kyber/pqcrystals-kyber_kyber512_ref/ntt.c
index 2f2eb10b..0a670e05 100644
--- a/src/kem/kyber/pqcrystals-kyber_kyber512_ref/ntt.c
+++ b/src/kem/kyber/pqcrystals-kyber_kyber512_ref/ntt.c
@@ -18,7 +18,7 @@ static const uint8_t tree[128] = {
   7, 71, 39, 103, 23, 87, 55, 119, 15, 79, 47, 111, 31, 95, 63, 127
 };
 
-void init_ntt() {
+void init_ntt(void) {
   unsigned int i;
   int16_t tmp[128];
 
diff --git a/src/kem/kyber/pqcrystals-kyber_kyber768-90s_ref/ntt.c b/src/kem/kyber/pqcrystals-kyber_kyber768-90s_ref/ntt.c
index 2f2eb10b..0a670e05 100644
--- a/src/kem/kyber/pqcrystals-kyber_kyber768-90s_ref/ntt.c
+++ b/src/kem/kyber/pqcrystals-kyber_kyber768-90s_ref/ntt.c
@@ -18,7 +18,7 @@ static const uint8_t tree[128] = {
   7, 71, 39, 103, 23, 87, 55, 119, 15, 79, 47, 111, 31, 95, 63, 127
 };
 
-void init_ntt() {
+void init_ntt(void) {
   unsigned int i;
   int16_t tmp[128];
 
diff --git a/src/kem/kyber/pqcrystals-kyber_kyber768_ref/ntt.c b/src/kem/kyber/pqcrystals-kyber_kyber768_ref/ntt.c
index 2f2eb10b..0a670e05 100644
--- a/src/kem/kyber/pqcrystals-kyber_kyber768_ref/ntt.c
+++ b/src/kem/kyber/pqcrystals-kyber_kyber768_ref/ntt.c
@@ -18,7 +18,7 @@ static const uint8_t tree[128] = {
   7, 71, 39, 103, 23, 87, 55, 119, 15, 79, 47, 111, 31, 95, 63, 127
 };
 
-void init_ntt() {
+void init_ntt(void) {
   unsigned int i;
   int16_t tmp[128];
 
diff --git a/src/kem/ntru/kem_ntru_hps2048509.c b/src/kem/ntru/kem_ntru_hps2048509.c
index 8a1674d2..a8ada905 100644
--- a/src/kem/ntru/kem_ntru_hps2048509.c
+++ b/src/kem/ntru/kem_ntru_hps2048509.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_KEM_ntru_hps2048509)
 
-OQS_KEM *OQS_KEM_ntru_hps2048509_new() {
+OQS_KEM *OQS_KEM_ntru_hps2048509_new(void) {
 
 	OQS_KEM *kem = malloc(sizeof(OQS_KEM));
 	if (kem == NULL) {
diff --git a/src/kem/ntru/kem_ntru_hps2048677.c b/src/kem/ntru/kem_ntru_hps2048677.c
index 333ae3d5..b96c74df 100644
--- a/src/kem/ntru/kem_ntru_hps2048677.c
+++ b/src/kem/ntru/kem_ntru_hps2048677.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_KEM_ntru_hps2048677)
 
-OQS_KEM *OQS_KEM_ntru_hps2048677_new() {
+OQS_KEM *OQS_KEM_ntru_hps2048677_new(void) {
 
 	OQS_KEM *kem = malloc(sizeof(OQS_KEM));
 	if (kem == NULL) {
diff --git a/src/kem/ntru/kem_ntru_hps40961229.c b/src/kem/ntru/kem_ntru_hps40961229.c
index 991796f0..80ef09db 100644
--- a/src/kem/ntru/kem_ntru_hps40961229.c
+++ b/src/kem/ntru/kem_ntru_hps40961229.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_KEM_ntru_hps40961229)
 
-OQS_KEM *OQS_KEM_ntru_hps40961229_new() {
+OQS_KEM *OQS_KEM_ntru_hps40961229_new(void) {
 
 	OQS_KEM *kem = malloc(sizeof(OQS_KEM));
 	if (kem == NULL) {
diff --git a/src/kem/ntru/kem_ntru_hps4096821.c b/src/kem/ntru/kem_ntru_hps4096821.c
index 13e5e8f3..11abbf7e 100644
--- a/src/kem/ntru/kem_ntru_hps4096821.c
+++ b/src/kem/ntru/kem_ntru_hps4096821.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_KEM_ntru_hps4096821)
 
-OQS_KEM *OQS_KEM_ntru_hps4096821_new() {
+OQS_KEM *OQS_KEM_ntru_hps4096821_new(void) {
 
 	OQS_KEM *kem = malloc(sizeof(OQS_KEM));
 	if (kem == NULL) {
diff --git a/src/kem/ntru/kem_ntru_hrss1373.c b/src/kem/ntru/kem_ntru_hrss1373.c
index ec35c6b1..74cc2071 100644
--- a/src/kem/ntru/kem_ntru_hrss1373.c
+++ b/src/kem/ntru/kem_ntru_hrss1373.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_KEM_ntru_hrss1373)
 
-OQS_KEM *OQS_KEM_ntru_hrss1373_new() {
+OQS_KEM *OQS_KEM_ntru_hrss1373_new(void) {
 
 	OQS_KEM *kem = malloc(sizeof(OQS_KEM));
 	if (kem == NULL) {
diff --git a/src/kem/ntru/kem_ntru_hrss701.c b/src/kem/ntru/kem_ntru_hrss701.c
index 12e4fbff..43f39239 100644
--- a/src/kem/ntru/kem_ntru_hrss701.c
+++ b/src/kem/ntru/kem_ntru_hrss701.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_KEM_ntru_hrss701)
 
-OQS_KEM *OQS_KEM_ntru_hrss701_new() {
+OQS_KEM *OQS_KEM_ntru_hrss701_new(void) {
 
 	OQS_KEM *kem = malloc(sizeof(OQS_KEM));
 	if (kem == NULL) {
diff --git a/src/kem/ntruprime/kem_ntruprime_ntrulpr1277.c b/src/kem/ntruprime/kem_ntruprime_ntrulpr1277.c
index 02370db7..16f5d494 100644
--- a/src/kem/ntruprime/kem_ntruprime_ntrulpr1277.c
+++ b/src/kem/ntruprime/kem_ntruprime_ntrulpr1277.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_KEM_ntruprime_ntrulpr1277)
 
-OQS_KEM *OQS_KEM_ntruprime_ntrulpr1277_new() {
+OQS_KEM *OQS_KEM_ntruprime_ntrulpr1277_new(void) {
 
 	OQS_KEM *kem = malloc(sizeof(OQS_KEM));
 	if (kem == NULL) {
diff --git a/src/kem/ntruprime/kem_ntruprime_ntrulpr653.c b/src/kem/ntruprime/kem_ntruprime_ntrulpr653.c
index a62e9ecd..1b1b01a0 100644
--- a/src/kem/ntruprime/kem_ntruprime_ntrulpr653.c
+++ b/src/kem/ntruprime/kem_ntruprime_ntrulpr653.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_KEM_ntruprime_ntrulpr653)
 
-OQS_KEM *OQS_KEM_ntruprime_ntrulpr653_new() {
+OQS_KEM *OQS_KEM_ntruprime_ntrulpr653_new(void) {
 
 	OQS_KEM *kem = malloc(sizeof(OQS_KEM));
 	if (kem == NULL) {
diff --git a/src/kem/ntruprime/kem_ntruprime_ntrulpr761.c b/src/kem/ntruprime/kem_ntruprime_ntrulpr761.c
index 509f7e76..c4ebb4f9 100644
--- a/src/kem/ntruprime/kem_ntruprime_ntrulpr761.c
+++ b/src/kem/ntruprime/kem_ntruprime_ntrulpr761.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_KEM_ntruprime_ntrulpr761)
 
-OQS_KEM *OQS_KEM_ntruprime_ntrulpr761_new() {
+OQS_KEM *OQS_KEM_ntruprime_ntrulpr761_new(void) {
 
 	OQS_KEM *kem = malloc(sizeof(OQS_KEM));
 	if (kem == NULL) {
diff --git a/src/kem/ntruprime/kem_ntruprime_ntrulpr857.c b/src/kem/ntruprime/kem_ntruprime_ntrulpr857.c
index 612be88d..73330e70 100644
--- a/src/kem/ntruprime/kem_ntruprime_ntrulpr857.c
+++ b/src/kem/ntruprime/kem_ntruprime_ntrulpr857.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_KEM_ntruprime_ntrulpr857)
 
-OQS_KEM *OQS_KEM_ntruprime_ntrulpr857_new() {
+OQS_KEM *OQS_KEM_ntruprime_ntrulpr857_new(void) {
 
 	OQS_KEM *kem = malloc(sizeof(OQS_KEM));
 	if (kem == NULL) {
diff --git a/src/kem/ntruprime/kem_ntruprime_sntrup1277.c b/src/kem/ntruprime/kem_ntruprime_sntrup1277.c
index 2f3ca4a6..04197559 100644
--- a/src/kem/ntruprime/kem_ntruprime_sntrup1277.c
+++ b/src/kem/ntruprime/kem_ntruprime_sntrup1277.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_KEM_ntruprime_sntrup1277)
 
-OQS_KEM *OQS_KEM_ntruprime_sntrup1277_new() {
+OQS_KEM *OQS_KEM_ntruprime_sntrup1277_new(void) {
 
 	OQS_KEM *kem = malloc(sizeof(OQS_KEM));
 	if (kem == NULL) {
diff --git a/src/kem/ntruprime/kem_ntruprime_sntrup653.c b/src/kem/ntruprime/kem_ntruprime_sntrup653.c
index c9e3330b..cc331630 100644
--- a/src/kem/ntruprime/kem_ntruprime_sntrup653.c
+++ b/src/kem/ntruprime/kem_ntruprime_sntrup653.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_KEM_ntruprime_sntrup653)
 
-OQS_KEM *OQS_KEM_ntruprime_sntrup653_new() {
+OQS_KEM *OQS_KEM_ntruprime_sntrup653_new(void) {
 
 	OQS_KEM *kem = malloc(sizeof(OQS_KEM));
 	if (kem == NULL) {
diff --git a/src/kem/ntruprime/kem_ntruprime_sntrup761.c b/src/kem/ntruprime/kem_ntruprime_sntrup761.c
index 8c405230..bc69b362 100644
--- a/src/kem/ntruprime/kem_ntruprime_sntrup761.c
+++ b/src/kem/ntruprime/kem_ntruprime_sntrup761.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_KEM_ntruprime_sntrup761)
 
-OQS_KEM *OQS_KEM_ntruprime_sntrup761_new() {
+OQS_KEM *OQS_KEM_ntruprime_sntrup761_new(void) {
 
 	OQS_KEM *kem = malloc(sizeof(OQS_KEM));
 	if (kem == NULL) {
diff --git a/src/kem/ntruprime/kem_ntruprime_sntrup857.c b/src/kem/ntruprime/kem_ntruprime_sntrup857.c
index 2231cc43..360f6c5e 100644
--- a/src/kem/ntruprime/kem_ntruprime_sntrup857.c
+++ b/src/kem/ntruprime/kem_ntruprime_sntrup857.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_KEM_ntruprime_sntrup857)
 
-OQS_KEM *OQS_KEM_ntruprime_sntrup857_new() {
+OQS_KEM *OQS_KEM_ntruprime_sntrup857_new(void) {
 
 	OQS_KEM *kem = malloc(sizeof(OQS_KEM));
 	if (kem == NULL) {
diff --git a/src/kem/saber/kem_saber_firesaber.c b/src/kem/saber/kem_saber_firesaber.c
index 69c9865e..bf0b1dba 100644
--- a/src/kem/saber/kem_saber_firesaber.c
+++ b/src/kem/saber/kem_saber_firesaber.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_KEM_saber_firesaber)
 
-OQS_KEM *OQS_KEM_saber_firesaber_new() {
+OQS_KEM *OQS_KEM_saber_firesaber_new(void) {
 
 	OQS_KEM *kem = malloc(sizeof(OQS_KEM));
 	if (kem == NULL) {
diff --git a/src/kem/saber/kem_saber_lightsaber.c b/src/kem/saber/kem_saber_lightsaber.c
index a1ac7568..a2366eee 100644
--- a/src/kem/saber/kem_saber_lightsaber.c
+++ b/src/kem/saber/kem_saber_lightsaber.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_KEM_saber_lightsaber)
 
-OQS_KEM *OQS_KEM_saber_lightsaber_new() {
+OQS_KEM *OQS_KEM_saber_lightsaber_new(void) {
 
 	OQS_KEM *kem = malloc(sizeof(OQS_KEM));
 	if (kem == NULL) {
diff --git a/src/kem/saber/kem_saber_saber.c b/src/kem/saber/kem_saber_saber.c
index 4d56295b..97b63860 100644
--- a/src/kem/saber/kem_saber_saber.c
+++ b/src/kem/saber/kem_saber_saber.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_KEM_saber_saber)
 
-OQS_KEM *OQS_KEM_saber_saber_new() {
+OQS_KEM *OQS_KEM_saber_saber_new(void) {
 
 	OQS_KEM *kem = malloc(sizeof(OQS_KEM));
 	if (kem == NULL) {
diff --git a/src/sig/dilithium/sig_dilithium_2.c b/src/sig/dilithium/sig_dilithium_2.c
index 18198465..de1b2ad1 100644
--- a/src/sig/dilithium/sig_dilithium_2.c
+++ b/src/sig/dilithium/sig_dilithium_2.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_SIG_dilithium_2)
 
-OQS_SIG *OQS_SIG_dilithium_2_new() {
+OQS_SIG *OQS_SIG_dilithium_2_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
diff --git a/src/sig/dilithium/sig_dilithium_2_aes.c b/src/sig/dilithium/sig_dilithium_2_aes.c
index ee8ff2cf..6b978edd 100644
--- a/src/sig/dilithium/sig_dilithium_2_aes.c
+++ b/src/sig/dilithium/sig_dilithium_2_aes.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_SIG_dilithium_2_aes)
 
-OQS_SIG *OQS_SIG_dilithium_2_aes_new() {
+OQS_SIG *OQS_SIG_dilithium_2_aes_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
diff --git a/src/sig/dilithium/sig_dilithium_3.c b/src/sig/dilithium/sig_dilithium_3.c
index cfc650a9..f1a8311a 100644
--- a/src/sig/dilithium/sig_dilithium_3.c
+++ b/src/sig/dilithium/sig_dilithium_3.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_SIG_dilithium_3)
 
-OQS_SIG *OQS_SIG_dilithium_3_new() {
+OQS_SIG *OQS_SIG_dilithium_3_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
diff --git a/src/sig/dilithium/sig_dilithium_3_aes.c b/src/sig/dilithium/sig_dilithium_3_aes.c
index 30b2e267..285ce83c 100644
--- a/src/sig/dilithium/sig_dilithium_3_aes.c
+++ b/src/sig/dilithium/sig_dilithium_3_aes.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_SIG_dilithium_3_aes)
 
-OQS_SIG *OQS_SIG_dilithium_3_aes_new() {
+OQS_SIG *OQS_SIG_dilithium_3_aes_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
diff --git a/src/sig/dilithium/sig_dilithium_5.c b/src/sig/dilithium/sig_dilithium_5.c
index 521e4143..06871be6 100644
--- a/src/sig/dilithium/sig_dilithium_5.c
+++ b/src/sig/dilithium/sig_dilithium_5.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_SIG_dilithium_5)
 
-OQS_SIG *OQS_SIG_dilithium_5_new() {
+OQS_SIG *OQS_SIG_dilithium_5_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
diff --git a/src/sig/dilithium/sig_dilithium_5_aes.c b/src/sig/dilithium/sig_dilithium_5_aes.c
index 66d7eefe..3f4a58d1 100644
--- a/src/sig/dilithium/sig_dilithium_5_aes.c
+++ b/src/sig/dilithium/sig_dilithium_5_aes.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_SIG_dilithium_5_aes)
 
-OQS_SIG *OQS_SIG_dilithium_5_aes_new() {
+OQS_SIG *OQS_SIG_dilithium_5_aes_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
diff --git a/src/sig/falcon/sig_falcon_1024.c b/src/sig/falcon/sig_falcon_1024.c
index 4d7ed161..cdb3cd0d 100644
--- a/src/sig/falcon/sig_falcon_1024.c
+++ b/src/sig/falcon/sig_falcon_1024.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_SIG_falcon_1024)
 
-OQS_SIG *OQS_SIG_falcon_1024_new() {
+OQS_SIG *OQS_SIG_falcon_1024_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
diff --git a/src/sig/falcon/sig_falcon_512.c b/src/sig/falcon/sig_falcon_512.c
index 3dc7b15b..1b09cff5 100644
--- a/src/sig/falcon/sig_falcon_512.c
+++ b/src/sig/falcon/sig_falcon_512.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_SIG_falcon_512)
 
-OQS_SIG *OQS_SIG_falcon_512_new() {
+OQS_SIG *OQS_SIG_falcon_512_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
diff --git a/src/sig/picnic/sig_picnic.c b/src/sig/picnic/sig_picnic.c
index 8b457b8e..1c188c08 100644
--- a/src/sig/picnic/sig_picnic.c
+++ b/src/sig/picnic/sig_picnic.c
@@ -118,7 +118,7 @@ static OQS_STATUS common_picnic_verify(picnic_params_t parameters, const uint8_t
 
 #ifdef OQS_ENABLE_SIG_picnic_L1_FS
 
-OQS_SIG *OQS_SIG_picnic_L1_FS_new() {
+OQS_SIG *OQS_SIG_picnic_L1_FS_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
@@ -157,7 +157,7 @@ OQS_API OQS_STATUS OQS_SIG_picnic_L1_FS_verify(const uint8_t *message, size_t me
 
 #ifdef OQS_ENABLE_SIG_picnic_L1_UR
 
-OQS_SIG *OQS_SIG_picnic_L1_UR_new() {
+OQS_SIG *OQS_SIG_picnic_L1_UR_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
@@ -196,7 +196,7 @@ OQS_API OQS_STATUS OQS_SIG_picnic_L1_UR_verify(const uint8_t *message, size_t me
 
 #ifdef OQS_ENABLE_SIG_picnic_L1_full
 
-OQS_SIG *OQS_SIG_picnic_L1_full_new() {
+OQS_SIG *OQS_SIG_picnic_L1_full_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
@@ -235,7 +235,7 @@ OQS_API OQS_STATUS OQS_SIG_picnic_L1_full_verify(const uint8_t *message, size_t
 
 #ifdef OQS_ENABLE_SIG_picnic_L3_FS
 
-OQS_SIG *OQS_SIG_picnic_L3_FS_new() {
+OQS_SIG *OQS_SIG_picnic_L3_FS_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
@@ -274,7 +274,7 @@ OQS_API OQS_STATUS OQS_SIG_picnic_L3_FS_verify(const uint8_t *message, size_t me
 
 #ifdef OQS_ENABLE_SIG_picnic_L3_UR
 
-OQS_SIG *OQS_SIG_picnic_L3_UR_new() {
+OQS_SIG *OQS_SIG_picnic_L3_UR_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
@@ -313,7 +313,7 @@ OQS_API OQS_STATUS OQS_SIG_picnic_L3_UR_verify(const uint8_t *message, size_t me
 
 #ifdef OQS_ENABLE_SIG_picnic_L3_full
 
-OQS_SIG *OQS_SIG_picnic_L3_full_new() {
+OQS_SIG *OQS_SIG_picnic_L3_full_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
@@ -352,7 +352,7 @@ OQS_API OQS_STATUS OQS_SIG_picnic_L3_full_verify(const uint8_t *message, size_t
 
 #ifdef OQS_ENABLE_SIG_picnic_L5_FS
 
-OQS_SIG *OQS_SIG_picnic_L5_FS_new() {
+OQS_SIG *OQS_SIG_picnic_L5_FS_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
@@ -391,7 +391,7 @@ OQS_API OQS_STATUS OQS_SIG_picnic_L5_FS_verify(const uint8_t *message, size_t me
 
 #ifdef OQS_ENABLE_SIG_picnic_L5_UR
 
-OQS_SIG *OQS_SIG_picnic_L5_UR_new() {
+OQS_SIG *OQS_SIG_picnic_L5_UR_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
@@ -431,7 +431,7 @@ OQS_API OQS_STATUS OQS_SIG_picnic_L5_UR_verify(const uint8_t *message, size_t me
 
 #ifdef OQS_ENABLE_SIG_picnic_L5_full
 
-OQS_SIG *OQS_SIG_picnic_L5_full_new() {
+OQS_SIG *OQS_SIG_picnic_L5_full_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
@@ -469,7 +469,7 @@ OQS_API OQS_STATUS OQS_SIG_picnic_L5_full_verify(const uint8_t *message, size_t
 #endif
 
 #ifdef OQS_ENABLE_SIG_picnic3_L1
-OQS_SIG *OQS_SIG_picnic3_L1_new() {
+OQS_SIG *OQS_SIG_picnic3_L1_new(void) {
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
 		return NULL;
@@ -507,7 +507,7 @@ OQS_API OQS_STATUS OQS_SIG_picnic3_L1_verify(const uint8_t *message, size_t mess
 
 #ifdef OQS_ENABLE_SIG_picnic3_L3
 
-OQS_SIG *OQS_SIG_picnic3_L3_new() {
+OQS_SIG *OQS_SIG_picnic3_L3_new(void) {
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
 		return NULL;
@@ -545,7 +545,7 @@ OQS_API OQS_STATUS OQS_SIG_picnic3_L3_verify(const uint8_t *message, size_t mess
 
 #ifdef OQS_ENABLE_SIG_picnic3_L5
 
-OQS_SIG *OQS_SIG_picnic3_L5_new() {
+OQS_SIG *OQS_SIG_picnic3_L5_new(void) {
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
 		return NULL;
diff --git a/src/sig/rainbow/sig_rainbow_III_circumzenithal.c b/src/sig/rainbow/sig_rainbow_III_circumzenithal.c
index 935837d8..0397d53d 100644
--- a/src/sig/rainbow/sig_rainbow_III_circumzenithal.c
+++ b/src/sig/rainbow/sig_rainbow_III_circumzenithal.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_SIG_rainbow_III_circumzenithal)
 
-OQS_SIG *OQS_SIG_rainbow_III_circumzenithal_new() {
+OQS_SIG *OQS_SIG_rainbow_III_circumzenithal_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
diff --git a/src/sig/rainbow/sig_rainbow_III_classic.c b/src/sig/rainbow/sig_rainbow_III_classic.c
index c2e650b8..e8157f6a 100644
--- a/src/sig/rainbow/sig_rainbow_III_classic.c
+++ b/src/sig/rainbow/sig_rainbow_III_classic.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_SIG_rainbow_III_classic)
 
-OQS_SIG *OQS_SIG_rainbow_III_classic_new() {
+OQS_SIG *OQS_SIG_rainbow_III_classic_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
diff --git a/src/sig/rainbow/sig_rainbow_III_compressed.c b/src/sig/rainbow/sig_rainbow_III_compressed.c
index de8a99dc..2a7173d9 100644
--- a/src/sig/rainbow/sig_rainbow_III_compressed.c
+++ b/src/sig/rainbow/sig_rainbow_III_compressed.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_SIG_rainbow_III_compressed)
 
-OQS_SIG *OQS_SIG_rainbow_III_compressed_new() {
+OQS_SIG *OQS_SIG_rainbow_III_compressed_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
diff --git a/src/sig/rainbow/sig_rainbow_V_circumzenithal.c b/src/sig/rainbow/sig_rainbow_V_circumzenithal.c
index 53ba3809..890503b6 100644
--- a/src/sig/rainbow/sig_rainbow_V_circumzenithal.c
+++ b/src/sig/rainbow/sig_rainbow_V_circumzenithal.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_SIG_rainbow_V_circumzenithal)
 
-OQS_SIG *OQS_SIG_rainbow_V_circumzenithal_new() {
+OQS_SIG *OQS_SIG_rainbow_V_circumzenithal_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
diff --git a/src/sig/rainbow/sig_rainbow_V_classic.c b/src/sig/rainbow/sig_rainbow_V_classic.c
index fd3690e6..ceac9de5 100644
--- a/src/sig/rainbow/sig_rainbow_V_classic.c
+++ b/src/sig/rainbow/sig_rainbow_V_classic.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_SIG_rainbow_V_classic)
 
-OQS_SIG *OQS_SIG_rainbow_V_classic_new() {
+OQS_SIG *OQS_SIG_rainbow_V_classic_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
diff --git a/src/sig/rainbow/sig_rainbow_V_compressed.c b/src/sig/rainbow/sig_rainbow_V_compressed.c
index d43a2f95..258570e0 100644
--- a/src/sig/rainbow/sig_rainbow_V_compressed.c
+++ b/src/sig/rainbow/sig_rainbow_V_compressed.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_SIG_rainbow_V_compressed)
 
-OQS_SIG *OQS_SIG_rainbow_V_compressed_new() {
+OQS_SIG *OQS_SIG_rainbow_V_compressed_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
diff --git a/src/sig/sig.c b/src/sig/sig.c
index 15f723a4..fd1fab10 100644
--- a/src/sig/sig.c
+++ b/src/sig/sig.c
@@ -86,7 +86,7 @@ OQS_API const char *OQS_SIG_alg_identifier(size_t i) {
 	}
 }
 
-OQS_API int OQS_SIG_alg_count() {
+OQS_API int OQS_SIG_alg_count(void) {
 	return OQS_SIG_algs_length;
 }
 
diff --git a/src/sig/sphincs/sig_sphincs_haraka_128f_robust.c b/src/sig/sphincs/sig_sphincs_haraka_128f_robust.c
index 9a1578f9..ce81ac57 100644
--- a/src/sig/sphincs/sig_sphincs_haraka_128f_robust.c
+++ b/src/sig/sphincs/sig_sphincs_haraka_128f_robust.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_SIG_sphincs_haraka_128f_robust)
 
-OQS_SIG *OQS_SIG_sphincs_haraka_128f_robust_new() {
+OQS_SIG *OQS_SIG_sphincs_haraka_128f_robust_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
diff --git a/src/sig/sphincs/sig_sphincs_haraka_128f_simple.c b/src/sig/sphincs/sig_sphincs_haraka_128f_simple.c
index 75924341..8e4fa4a7 100644
--- a/src/sig/sphincs/sig_sphincs_haraka_128f_simple.c
+++ b/src/sig/sphincs/sig_sphincs_haraka_128f_simple.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_SIG_sphincs_haraka_128f_simple)
 
-OQS_SIG *OQS_SIG_sphincs_haraka_128f_simple_new() {
+OQS_SIG *OQS_SIG_sphincs_haraka_128f_simple_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
diff --git a/src/sig/sphincs/sig_sphincs_haraka_128s_robust.c b/src/sig/sphincs/sig_sphincs_haraka_128s_robust.c
index 91d1a433..8bc44695 100644
--- a/src/sig/sphincs/sig_sphincs_haraka_128s_robust.c
+++ b/src/sig/sphincs/sig_sphincs_haraka_128s_robust.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_SIG_sphincs_haraka_128s_robust)
 
-OQS_SIG *OQS_SIG_sphincs_haraka_128s_robust_new() {
+OQS_SIG *OQS_SIG_sphincs_haraka_128s_robust_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
diff --git a/src/sig/sphincs/sig_sphincs_haraka_128s_simple.c b/src/sig/sphincs/sig_sphincs_haraka_128s_simple.c
index 869fb77c..5c0d83b4 100644
--- a/src/sig/sphincs/sig_sphincs_haraka_128s_simple.c
+++ b/src/sig/sphincs/sig_sphincs_haraka_128s_simple.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_SIG_sphincs_haraka_128s_simple)
 
-OQS_SIG *OQS_SIG_sphincs_haraka_128s_simple_new() {
+OQS_SIG *OQS_SIG_sphincs_haraka_128s_simple_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
diff --git a/src/sig/sphincs/sig_sphincs_haraka_192f_robust.c b/src/sig/sphincs/sig_sphincs_haraka_192f_robust.c
index 4d1d4004..6cee0c89 100644
--- a/src/sig/sphincs/sig_sphincs_haraka_192f_robust.c
+++ b/src/sig/sphincs/sig_sphincs_haraka_192f_robust.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_SIG_sphincs_haraka_192f_robust)
 
-OQS_SIG *OQS_SIG_sphincs_haraka_192f_robust_new() {
+OQS_SIG *OQS_SIG_sphincs_haraka_192f_robust_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
diff --git a/src/sig/sphincs/sig_sphincs_haraka_192f_simple.c b/src/sig/sphincs/sig_sphincs_haraka_192f_simple.c
index 2c017c5c..aeb1e518 100644
--- a/src/sig/sphincs/sig_sphincs_haraka_192f_simple.c
+++ b/src/sig/sphincs/sig_sphincs_haraka_192f_simple.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_SIG_sphincs_haraka_192f_simple)
 
-OQS_SIG *OQS_SIG_sphincs_haraka_192f_simple_new() {
+OQS_SIG *OQS_SIG_sphincs_haraka_192f_simple_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
diff --git a/src/sig/sphincs/sig_sphincs_haraka_192s_robust.c b/src/sig/sphincs/sig_sphincs_haraka_192s_robust.c
index 26ba840f..4dc3f34c 100644
--- a/src/sig/sphincs/sig_sphincs_haraka_192s_robust.c
+++ b/src/sig/sphincs/sig_sphincs_haraka_192s_robust.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_SIG_sphincs_haraka_192s_robust)
 
-OQS_SIG *OQS_SIG_sphincs_haraka_192s_robust_new() {
+OQS_SIG *OQS_SIG_sphincs_haraka_192s_robust_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
diff --git a/src/sig/sphincs/sig_sphincs_haraka_192s_simple.c b/src/sig/sphincs/sig_sphincs_haraka_192s_simple.c
index 2b8222f9..cbad3efe 100644
--- a/src/sig/sphincs/sig_sphincs_haraka_192s_simple.c
+++ b/src/sig/sphincs/sig_sphincs_haraka_192s_simple.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_SIG_sphincs_haraka_192s_simple)
 
-OQS_SIG *OQS_SIG_sphincs_haraka_192s_simple_new() {
+OQS_SIG *OQS_SIG_sphincs_haraka_192s_simple_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
diff --git a/src/sig/sphincs/sig_sphincs_haraka_256f_robust.c b/src/sig/sphincs/sig_sphincs_haraka_256f_robust.c
index 9222be5c..9c786991 100644
--- a/src/sig/sphincs/sig_sphincs_haraka_256f_robust.c
+++ b/src/sig/sphincs/sig_sphincs_haraka_256f_robust.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_SIG_sphincs_haraka_256f_robust)
 
-OQS_SIG *OQS_SIG_sphincs_haraka_256f_robust_new() {
+OQS_SIG *OQS_SIG_sphincs_haraka_256f_robust_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
diff --git a/src/sig/sphincs/sig_sphincs_haraka_256f_simple.c b/src/sig/sphincs/sig_sphincs_haraka_256f_simple.c
index 00f15de2..85f51dc2 100644
--- a/src/sig/sphincs/sig_sphincs_haraka_256f_simple.c
+++ b/src/sig/sphincs/sig_sphincs_haraka_256f_simple.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_SIG_sphincs_haraka_256f_simple)
 
-OQS_SIG *OQS_SIG_sphincs_haraka_256f_simple_new() {
+OQS_SIG *OQS_SIG_sphincs_haraka_256f_simple_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
diff --git a/src/sig/sphincs/sig_sphincs_haraka_256s_robust.c b/src/sig/sphincs/sig_sphincs_haraka_256s_robust.c
index 828e12ab..4a4ca894 100644
--- a/src/sig/sphincs/sig_sphincs_haraka_256s_robust.c
+++ b/src/sig/sphincs/sig_sphincs_haraka_256s_robust.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_SIG_sphincs_haraka_256s_robust)
 
-OQS_SIG *OQS_SIG_sphincs_haraka_256s_robust_new() {
+OQS_SIG *OQS_SIG_sphincs_haraka_256s_robust_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
diff --git a/src/sig/sphincs/sig_sphincs_haraka_256s_simple.c b/src/sig/sphincs/sig_sphincs_haraka_256s_simple.c
index 91b2db92..ed656041 100644
--- a/src/sig/sphincs/sig_sphincs_haraka_256s_simple.c
+++ b/src/sig/sphincs/sig_sphincs_haraka_256s_simple.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_SIG_sphincs_haraka_256s_simple)
 
-OQS_SIG *OQS_SIG_sphincs_haraka_256s_simple_new() {
+OQS_SIG *OQS_SIG_sphincs_haraka_256s_simple_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
diff --git a/src/sig/sphincs/sig_sphincs_sha256_128f_robust.c b/src/sig/sphincs/sig_sphincs_sha256_128f_robust.c
index c68c662b..6327b42c 100644
--- a/src/sig/sphincs/sig_sphincs_sha256_128f_robust.c
+++ b/src/sig/sphincs/sig_sphincs_sha256_128f_robust.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_SIG_sphincs_sha256_128f_robust)
 
-OQS_SIG *OQS_SIG_sphincs_sha256_128f_robust_new() {
+OQS_SIG *OQS_SIG_sphincs_sha256_128f_robust_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
diff --git a/src/sig/sphincs/sig_sphincs_sha256_128f_simple.c b/src/sig/sphincs/sig_sphincs_sha256_128f_simple.c
index 73d29900..672cf63f 100644
--- a/src/sig/sphincs/sig_sphincs_sha256_128f_simple.c
+++ b/src/sig/sphincs/sig_sphincs_sha256_128f_simple.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_SIG_sphincs_sha256_128f_simple)
 
-OQS_SIG *OQS_SIG_sphincs_sha256_128f_simple_new() {
+OQS_SIG *OQS_SIG_sphincs_sha256_128f_simple_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
diff --git a/src/sig/sphincs/sig_sphincs_sha256_128s_robust.c b/src/sig/sphincs/sig_sphincs_sha256_128s_robust.c
index 4447007d..323c1e6f 100644
--- a/src/sig/sphincs/sig_sphincs_sha256_128s_robust.c
+++ b/src/sig/sphincs/sig_sphincs_sha256_128s_robust.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_SIG_sphincs_sha256_128s_robust)
 
-OQS_SIG *OQS_SIG_sphincs_sha256_128s_robust_new() {
+OQS_SIG *OQS_SIG_sphincs_sha256_128s_robust_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
diff --git a/src/sig/sphincs/sig_sphincs_sha256_128s_simple.c b/src/sig/sphincs/sig_sphincs_sha256_128s_simple.c
index 30e70f7f..f470ae95 100644
--- a/src/sig/sphincs/sig_sphincs_sha256_128s_simple.c
+++ b/src/sig/sphincs/sig_sphincs_sha256_128s_simple.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_SIG_sphincs_sha256_128s_simple)
 
-OQS_SIG *OQS_SIG_sphincs_sha256_128s_simple_new() {
+OQS_SIG *OQS_SIG_sphincs_sha256_128s_simple_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
diff --git a/src/sig/sphincs/sig_sphincs_sha256_192f_robust.c b/src/sig/sphincs/sig_sphincs_sha256_192f_robust.c
index 38ec5aaf..2e2d26be 100644
--- a/src/sig/sphincs/sig_sphincs_sha256_192f_robust.c
+++ b/src/sig/sphincs/sig_sphincs_sha256_192f_robust.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_SIG_sphincs_sha256_192f_robust)
 
-OQS_SIG *OQS_SIG_sphincs_sha256_192f_robust_new() {
+OQS_SIG *OQS_SIG_sphincs_sha256_192f_robust_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
diff --git a/src/sig/sphincs/sig_sphincs_sha256_192f_simple.c b/src/sig/sphincs/sig_sphincs_sha256_192f_simple.c
index f541087f..808594e3 100644
--- a/src/sig/sphincs/sig_sphincs_sha256_192f_simple.c
+++ b/src/sig/sphincs/sig_sphincs_sha256_192f_simple.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_SIG_sphincs_sha256_192f_simple)
 
-OQS_SIG *OQS_SIG_sphincs_sha256_192f_simple_new() {
+OQS_SIG *OQS_SIG_sphincs_sha256_192f_simple_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
diff --git a/src/sig/sphincs/sig_sphincs_sha256_192s_robust.c b/src/sig/sphincs/sig_sphincs_sha256_192s_robust.c
index f3d2dd2d..b42ba27c 100644
--- a/src/sig/sphincs/sig_sphincs_sha256_192s_robust.c
+++ b/src/sig/sphincs/sig_sphincs_sha256_192s_robust.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_SIG_sphincs_sha256_192s_robust)
 
-OQS_SIG *OQS_SIG_sphincs_sha256_192s_robust_new() {
+OQS_SIG *OQS_SIG_sphincs_sha256_192s_robust_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
diff --git a/src/sig/sphincs/sig_sphincs_sha256_192s_simple.c b/src/sig/sphincs/sig_sphincs_sha256_192s_simple.c
index 66f1691e..dacd7555 100644
--- a/src/sig/sphincs/sig_sphincs_sha256_192s_simple.c
+++ b/src/sig/sphincs/sig_sphincs_sha256_192s_simple.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_SIG_sphincs_sha256_192s_simple)
 
-OQS_SIG *OQS_SIG_sphincs_sha256_192s_simple_new() {
+OQS_SIG *OQS_SIG_sphincs_sha256_192s_simple_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
diff --git a/src/sig/sphincs/sig_sphincs_sha256_256f_robust.c b/src/sig/sphincs/sig_sphincs_sha256_256f_robust.c
index 128917eb..367480a0 100644
--- a/src/sig/sphincs/sig_sphincs_sha256_256f_robust.c
+++ b/src/sig/sphincs/sig_sphincs_sha256_256f_robust.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_SIG_sphincs_sha256_256f_robust)
 
-OQS_SIG *OQS_SIG_sphincs_sha256_256f_robust_new() {
+OQS_SIG *OQS_SIG_sphincs_sha256_256f_robust_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
diff --git a/src/sig/sphincs/sig_sphincs_sha256_256f_simple.c b/src/sig/sphincs/sig_sphincs_sha256_256f_simple.c
index 5b850bea..e04bfe38 100644
--- a/src/sig/sphincs/sig_sphincs_sha256_256f_simple.c
+++ b/src/sig/sphincs/sig_sphincs_sha256_256f_simple.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_SIG_sphincs_sha256_256f_simple)
 
-OQS_SIG *OQS_SIG_sphincs_sha256_256f_simple_new() {
+OQS_SIG *OQS_SIG_sphincs_sha256_256f_simple_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
diff --git a/src/sig/sphincs/sig_sphincs_sha256_256s_robust.c b/src/sig/sphincs/sig_sphincs_sha256_256s_robust.c
index c0208c47..80d342d7 100644
--- a/src/sig/sphincs/sig_sphincs_sha256_256s_robust.c
+++ b/src/sig/sphincs/sig_sphincs_sha256_256s_robust.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_SIG_sphincs_sha256_256s_robust)
 
-OQS_SIG *OQS_SIG_sphincs_sha256_256s_robust_new() {
+OQS_SIG *OQS_SIG_sphincs_sha256_256s_robust_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
diff --git a/src/sig/sphincs/sig_sphincs_sha256_256s_simple.c b/src/sig/sphincs/sig_sphincs_sha256_256s_simple.c
index f1a0bfbb..71e6d097 100644
--- a/src/sig/sphincs/sig_sphincs_sha256_256s_simple.c
+++ b/src/sig/sphincs/sig_sphincs_sha256_256s_simple.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_SIG_sphincs_sha256_256s_simple)
 
-OQS_SIG *OQS_SIG_sphincs_sha256_256s_simple_new() {
+OQS_SIG *OQS_SIG_sphincs_sha256_256s_simple_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
diff --git a/src/sig/sphincs/sig_sphincs_shake256_128f_robust.c b/src/sig/sphincs/sig_sphincs_shake256_128f_robust.c
index 153e9ebe..0d173173 100644
--- a/src/sig/sphincs/sig_sphincs_shake256_128f_robust.c
+++ b/src/sig/sphincs/sig_sphincs_shake256_128f_robust.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_SIG_sphincs_shake256_128f_robust)
 
-OQS_SIG *OQS_SIG_sphincs_shake256_128f_robust_new() {
+OQS_SIG *OQS_SIG_sphincs_shake256_128f_robust_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
diff --git a/src/sig/sphincs/sig_sphincs_shake256_128f_simple.c b/src/sig/sphincs/sig_sphincs_shake256_128f_simple.c
index 48bd1c05..d04c0002 100644
--- a/src/sig/sphincs/sig_sphincs_shake256_128f_simple.c
+++ b/src/sig/sphincs/sig_sphincs_shake256_128f_simple.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_SIG_sphincs_shake256_128f_simple)
 
-OQS_SIG *OQS_SIG_sphincs_shake256_128f_simple_new() {
+OQS_SIG *OQS_SIG_sphincs_shake256_128f_simple_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
diff --git a/src/sig/sphincs/sig_sphincs_shake256_128s_robust.c b/src/sig/sphincs/sig_sphincs_shake256_128s_robust.c
index d191989b..69990e8f 100644
--- a/src/sig/sphincs/sig_sphincs_shake256_128s_robust.c
+++ b/src/sig/sphincs/sig_sphincs_shake256_128s_robust.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_SIG_sphincs_shake256_128s_robust)
 
-OQS_SIG *OQS_SIG_sphincs_shake256_128s_robust_new() {
+OQS_SIG *OQS_SIG_sphincs_shake256_128s_robust_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
diff --git a/src/sig/sphincs/sig_sphincs_shake256_128s_simple.c b/src/sig/sphincs/sig_sphincs_shake256_128s_simple.c
index 6f9a7266..716b0c14 100644
--- a/src/sig/sphincs/sig_sphincs_shake256_128s_simple.c
+++ b/src/sig/sphincs/sig_sphincs_shake256_128s_simple.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_SIG_sphincs_shake256_128s_simple)
 
-OQS_SIG *OQS_SIG_sphincs_shake256_128s_simple_new() {
+OQS_SIG *OQS_SIG_sphincs_shake256_128s_simple_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
diff --git a/src/sig/sphincs/sig_sphincs_shake256_192f_robust.c b/src/sig/sphincs/sig_sphincs_shake256_192f_robust.c
index 3a3e21b9..411e52be 100644
--- a/src/sig/sphincs/sig_sphincs_shake256_192f_robust.c
+++ b/src/sig/sphincs/sig_sphincs_shake256_192f_robust.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_SIG_sphincs_shake256_192f_robust)
 
-OQS_SIG *OQS_SIG_sphincs_shake256_192f_robust_new() {
+OQS_SIG *OQS_SIG_sphincs_shake256_192f_robust_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
diff --git a/src/sig/sphincs/sig_sphincs_shake256_192f_simple.c b/src/sig/sphincs/sig_sphincs_shake256_192f_simple.c
index bfedb8dd..5d008aaa 100644
--- a/src/sig/sphincs/sig_sphincs_shake256_192f_simple.c
+++ b/src/sig/sphincs/sig_sphincs_shake256_192f_simple.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_SIG_sphincs_shake256_192f_simple)
 
-OQS_SIG *OQS_SIG_sphincs_shake256_192f_simple_new() {
+OQS_SIG *OQS_SIG_sphincs_shake256_192f_simple_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
diff --git a/src/sig/sphincs/sig_sphincs_shake256_192s_robust.c b/src/sig/sphincs/sig_sphincs_shake256_192s_robust.c
index 3591d091..81483c4a 100644
--- a/src/sig/sphincs/sig_sphincs_shake256_192s_robust.c
+++ b/src/sig/sphincs/sig_sphincs_shake256_192s_robust.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_SIG_sphincs_shake256_192s_robust)
 
-OQS_SIG *OQS_SIG_sphincs_shake256_192s_robust_new() {
+OQS_SIG *OQS_SIG_sphincs_shake256_192s_robust_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
diff --git a/src/sig/sphincs/sig_sphincs_shake256_192s_simple.c b/src/sig/sphincs/sig_sphincs_shake256_192s_simple.c
index b55b566c..8eb67df9 100644
--- a/src/sig/sphincs/sig_sphincs_shake256_192s_simple.c
+++ b/src/sig/sphincs/sig_sphincs_shake256_192s_simple.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_SIG_sphincs_shake256_192s_simple)
 
-OQS_SIG *OQS_SIG_sphincs_shake256_192s_simple_new() {
+OQS_SIG *OQS_SIG_sphincs_shake256_192s_simple_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
diff --git a/src/sig/sphincs/sig_sphincs_shake256_256f_robust.c b/src/sig/sphincs/sig_sphincs_shake256_256f_robust.c
index 95355acb..c61e00f4 100644
--- a/src/sig/sphincs/sig_sphincs_shake256_256f_robust.c
+++ b/src/sig/sphincs/sig_sphincs_shake256_256f_robust.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_SIG_sphincs_shake256_256f_robust)
 
-OQS_SIG *OQS_SIG_sphincs_shake256_256f_robust_new() {
+OQS_SIG *OQS_SIG_sphincs_shake256_256f_robust_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
diff --git a/src/sig/sphincs/sig_sphincs_shake256_256f_simple.c b/src/sig/sphincs/sig_sphincs_shake256_256f_simple.c
index 533dc78f..41e46f35 100644
--- a/src/sig/sphincs/sig_sphincs_shake256_256f_simple.c
+++ b/src/sig/sphincs/sig_sphincs_shake256_256f_simple.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_SIG_sphincs_shake256_256f_simple)
 
-OQS_SIG *OQS_SIG_sphincs_shake256_256f_simple_new() {
+OQS_SIG *OQS_SIG_sphincs_shake256_256f_simple_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
diff --git a/src/sig/sphincs/sig_sphincs_shake256_256s_robust.c b/src/sig/sphincs/sig_sphincs_shake256_256s_robust.c
index a583d287..c2ed6078 100644
--- a/src/sig/sphincs/sig_sphincs_shake256_256s_robust.c
+++ b/src/sig/sphincs/sig_sphincs_shake256_256s_robust.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_SIG_sphincs_shake256_256s_robust)
 
-OQS_SIG *OQS_SIG_sphincs_shake256_256s_robust_new() {
+OQS_SIG *OQS_SIG_sphincs_shake256_256s_robust_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
diff --git a/src/sig/sphincs/sig_sphincs_shake256_256s_simple.c b/src/sig/sphincs/sig_sphincs_shake256_256s_simple.c
index 72ccee41..21ae73f9 100644
--- a/src/sig/sphincs/sig_sphincs_shake256_256s_simple.c
+++ b/src/sig/sphincs/sig_sphincs_shake256_256s_simple.c
@@ -6,7 +6,7 @@
 
 #if defined(OQS_ENABLE_SIG_sphincs_shake256_256s_simple)
 
-OQS_SIG *OQS_SIG_sphincs_shake256_256s_simple_new() {
+OQS_SIG *OQS_SIG_sphincs_shake256_256s_simple_new(void) {
 
 	OQS_SIG *sig = malloc(sizeof(OQS_SIG));
 	if (sig == NULL) {
-- 
2.40.0

